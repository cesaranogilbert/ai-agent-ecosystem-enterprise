apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent-ecosystem
  labels:
    app: ai-agent-ecosystem
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-agent-ecosystem
  template:
    metadata:
      labels:
        app: ai-agent-ecosystem
    spec:
      containers:
      - name: ai-agent-ecosystem
        image: ai-agent-ecosystem:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_APP
          value: "main.py"
        - name: FLASK_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ai-ecosystem-secrets
              key: database-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-ecosystem-secrets
              key: openai-api-key
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ai-agent-ecosystem-service
spec:
  selector:
    app: ai-agent-ecosystem
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer